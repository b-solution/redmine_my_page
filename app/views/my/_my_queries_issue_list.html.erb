<% sort_init(query.sort_criteria.empty? ? [['id', 'desc']] : query.sort_criteria)
   sort_update(query.sortable_columns)
   query.sort_criteria = sort_criteria.to_a

%>
<%  query.column_names = settings[:columns] if settings && settings[:columns]
    query_issues_count = query.issue_count
    if query_limit.to_i > 0
      query_issues = query.issues(:include => [:assigned_to, :tracker, :priority, :category, :fixed_version],
                                  :order => sort_clause,
                                  :limit => query_limit.to_i)
%>
    <h3>
      <%= "#{query.project} |" if query.project %>
      <%    sort_init(query.sort_criteria.empty? ? [['id', 'desc']] : query.sort_criteria)
            sort_update(query.sortable_columns)
      %>
      <%= link_to query.name, _project_issues_path(query.project, query.as_params) %>
      (<%= query_issues_count %>)
    </h3>

    <%= render :partial => 'issues/query_list',
               :locals => {
                   :issues => query_issues,
                   :query => query,
                   :query_options => {
                       :sort_param => "settings[#{block}][sort]",
                       :sort_link_options => {:method => :post, :remote => true}
                   }
               } %>
  <% end %>

  <% content_for :header_tags do %>
     <%= auto_discovery_link_tag(:atom,
          _project_issues_path(query.project, query.as_params.merge(:format => 'atom', :key => User.current.rss_key)),
          {:title => query.name}) %>
<% end %>
